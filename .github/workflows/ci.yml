name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [22.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
    
    - name: Setup Bun
      uses: oven-sh/setup-bun@v2
      with:
        bun-version: latest
    
    - name: Cache Bun dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.bun/install/cache
          node_modules
        key: ${{ runner.os }}-bun-${{ hashFiles('**/bun.lock') }}
        restore-keys: |
          ${{ runner.os }}-bun-
    
    - name: Install dependencies
      run: bun install --frozen-lockfile
    
    - name: Cache Playwright system dependencies
      uses: actions/cache@v4
      id: playwright-deps-cache
      with:
        path: |
          /var/cache/apt
          /var/lib/apt/lists
        key: ${{ runner.os }}-playwright-deps-${{ hashFiles('**/bun.lock') }}
        restore-keys: |
          ${{ runner.os }}-playwright-deps-
    
    - name: Cache Playwright browsers
      uses: actions/cache@v4
      id: playwright-cache
      with:
        path: |
          ~/.cache/ms-playwright
        key: ${{ runner.os }}-playwright-${{ hashFiles('**/bun.lock') }}
        restore-keys: |
          ${{ runner.os }}-playwright-
    
    - name: Install Playwright system dependencies
      if: steps.playwright-deps-cache.outputs.cache-hit != 'true'
      run: bunx playwright install-deps
    
    - name: Install Playwright browsers
      if: steps.playwright-cache.outputs.cache-hit != 'true'
      run: bunx playwright install
    
    - name: Run linting
      run: bun run lint
    
    - name: Check formatting
      run: bun run format:check
    
    - name: Type check
      run: bun run typecheck
    
    - name: Cache build output
      uses: actions/cache@v4
      with:
        path: |
          dist
          src/latex-parser.ts
        key: ${{ runner.os }}-build-${{ hashFiles('**/bun.lock', 'src/**/*', 'build.ts') }}
        restore-keys: |
          ${{ runner.os }}-build-
    
    - name: Build project
      run: bun run build
    
    - name: Run tests
      run: bun test