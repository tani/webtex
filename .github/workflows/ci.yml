name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.bun/install/cache
            node_modules
            packages/*/node_modules
          key: ${{ runner.os }}-bun-monorepo-${{ hashFiles('bun.lock', 'package.json', 'packages/*/package.json') }}
          restore-keys: |
            ${{ runner.os }}-bun-monorepo-

      - name: Install dependencies
        run: bun install

      - name: Cache Playwright browsers
        uses: actions/cache@v4
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ hashFiles('packages/core/package.json') }}
          restore-keys: |
            ${{ runner.os }}-playwright-

      - name: Install Playwright dependencies (Core)
        run: bunx playwright install-deps
        working-directory: ./packages/core

      - name: Install Playwright browsers (Core)
        run: bunx playwright install
        working-directory: ./packages/core

      - name: Install VS Code test dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y xvfb

      - name: Lint all packages
        run: bun run lint

      - name: Type check all packages
        run: bun run typecheck

      - name: Build all packages
        run: bun run compile

      - name: Test core package
        run: bun run test:core

      - name: Test VS Code extension
        run: xvfb-run -a bun run --cwd packages/vscode pretest

  # Package validation job for release readiness
  validate-packages:
    runs-on: ubuntu-latest
    needs: build-and-test
    if: github.event_name == 'push' && (github.ref == 'refs/heads/develop' || github.ref == 'refs/heads/main')
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install

      - name: Build packages
        run: bun run compile

      - name: Validate core package
        run: npm pack --dry-run
        working-directory: ./packages/core

      - name: Validate VS Code extension packaging
        run: bunx vsce package --no-dependencies
        working-directory: ./packages/vscode